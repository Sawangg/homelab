---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-server
  namespace: immich
spec:
  replicas: 1
  selector:
    matchLabels:
      app: immich-server
  template:
    metadata:
      labels:
        app: immich-server
    spec:
      containers:
        - name: immich-server
          image: ghcr.io/immich-app/immich-server:release
          envFrom:
            - configMapRef:
                name: immich-server-env
          ports:
            - containerPort: 3001
          volumeMounts:
            - name: immich-storage
              mountPath: /usr/src/app/upload
      volumes:
        - name: immich-storage
          persistentVolumeClaim:
            claimName: immich-storage-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-machine-learning
  namespace: immich
spec:
  replicas: 1
  selector:
    matchLabels:
      app: immich-machine-learning
  template:
    metadata:
      labels:
        app: immich-machine-learning
    spec:
      containers:
        - name: immich-machine-learning
          image: ghcr.io/immich-app/immich-machine-learning:release
          envFrom:
            - configMapRef:
                name: immich-pg-env
          volumeMounts:
            - name: model-cache
              mountPath: /cache
      volumes:
        - name: model-cache
          persistentVolumeClaim:
            claimName: immich-model-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-redis
  namespace: immich
spec:
  replicas: 1
  selector:
    matchLabels:
      app: immich-redis
  template:
    metadata:
      labels:
        app: immich-redis
    spec:
      containers:
        - name: immich-redis
          image: redis:6.2-alpine
          ports:
            - containerPort: 6379

---
apiVersion: v1
kind: Deployment
metadata:
  name: immich-postgres
  namespace: immich
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: immich-postgres
  template:
    metadata:
      labels:
        app: immich-postgres
    spec:
      containers:
        - name: immich-postgres
          image: tensorchord/pgvecto-rs:pg14-v0.2.0
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: immich-pg-env
          lifecycle:
            preStop:
              exec:
                command: ["/usr/local/bin/pg_ctl stop -D /var/lib/postgresql/data -w -t 60 -m fast"]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 250m
              memory: 600Mi
          volumeMounts:
            - name: database
              mountPath: /var/lib/postgresql/data/
      volumes:
        - name: database
          persistentVolumeClaim:
            claimName: immich-db-pvc

